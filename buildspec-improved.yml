version: 0.2

phases:
  pre_build:
    commands:
      - echo "=== PRE-BUILD PHASE ==="
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - echo "Testing ECR repository access..."
      - aws ecr describe-repositories --repository-names ivylevel-backend-new --region $AWS_DEFAULT_REGION
      - echo "Getting ECR login token..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "ECR login successful"
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/ivylevel-backend-new
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - BUILD_ID=$(echo $CODEBUILD_BUILD_ID | cut -d ':' -f 2)
      - echo "Repository URI: $REPOSITORY_URI"
      - echo "Image Tag: $IMAGE_TAG"
      - echo "Build ID: $BUILD_ID"
      - echo "Current directory: $(pwd)"
      - ls -la
  build:
    commands:
      - echo "=== BUILD PHASE ==="
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      - cd backend
      - echo "Backend directory contents:"
      - ls -la
      - echo "Building Docker image with tag: $REPOSITORY_URI:$IMAGE_TAG"
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - echo "Docker build completed successfully"
      - echo "Tagging image as latest..."
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image..."
      - echo "Pushing tag: $IMAGE_TAG"
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Pushing tag: latest"
      - docker push $REPOSITORY_URI:latest
      - echo "Docker push completed successfully"
      - echo "Verifying images in ECR..."
      - aws ecr describe-images --repository-name ivylevel-backend-new --region $AWS_DEFAULT_REGION
      - echo "Writing image definitions file..."
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:latest > imageDefinitions.json
      - echo "Image definitions content:"
      - cat imageDefinitions.json
      - echo "Uploading artifacts to S3..."
      - aws s3 cp imageDefinitions.json s3://ivylevel-v2-2-artifacts/builds/$BUILD_ID/
      - aws s3 cp appspec.yml s3://ivylevel-v2-2-artifacts/builds/$BUILD_ID/
      - aws s3 cp taskdef.json s3://ivylevel-v2-2-artifacts/builds/$BUILD_ID/
      - echo "Build artifacts uploaded to s3://ivylevel-v2-2-artifacts/builds/$BUILD_ID/"
      - echo "=== BUILD PHASE COMPLETED ==="

artifacts:
  files:
    - imageDefinitions.json
    - appspec.yml
    - taskdef.json
  discard-paths: no
  name: ivylevel-backend-$BUILD_ID

cache:
  paths:
    - '/root/.docker/**/*' 