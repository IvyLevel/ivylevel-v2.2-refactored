version: 0.2

phases:
  install:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - yum install -y jq
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
  pre_build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest -f backend/Dockerfile backend/
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
  build:
    commands:
      - echo "Pushing the Docker images..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo "Writing image definitions file..."
      - printf '[{"name":"app","imageUri":"%s"}]' $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION > imageDefinitions.json
      - echo "Updating task definition with new image..."
      - sed "s|<IMAGE1_NAME>|$REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION|g" taskdef.json > taskdef_updated.json
      - mv taskdef_updated.json taskdef.json
      - echo "Registering task definition..."
      - TASK_DEF_OUTPUT=$(aws ecs register-task-definition --cli-input-json file://taskdef.json)
      - echo "Task definition registered successfully"
      - TASK_DEF_ARN=$(echo $TASK_DEF_OUTPUT | jq -r .taskDefinition.taskDefinitionArn)
      - echo "Task Definition ARN extracted successfully"
      - echo "Updating appspec.yml with TaskDefinition ARN..."
      - sed "s|<TASK_DEFINITION_ARN>|$TASK_DEF_ARN|g" appspec.yml > appspec_updated.yml
      - mv appspec_updated.yml appspec.yml
      - echo "AppSpec validation completed"
      - echo "Generated artifacts:"
      - cat imageDefinitions.json
      - cat taskdef.json
      - cat appspec.yml
      - echo "Verifying artifacts exist:"
      - ls -la *.json *.yml
  post_build:
    commands:
      - echo "Build completed on `date`"
artifacts:
  files:
    - imageDefinitions.json
    - appspec.yml
    - taskdef.json
