version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/ivylevel-backend-new
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - BUILD_ID=$(echo $CODEBUILD_BUILD_ID | cut -d ':' -f 2)
      - echo "Repository URI: $REPOSITORY_URI"
      - echo "Image Tag: $IMAGE_TAG"
      - echo "Build ID: $BUILD_ID"
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd backend
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:latest > imageDefinitions.json
      - mv imageDefinitions.json ../imageDefinitions.json
      - mv ../appspec.yml ../taskdef.json ../ 2>/dev/null || true
      - ls -al /
      - ls -al .
      - ls -al backend

artifacts:
  files:
    - imageDefinitions.json
    - appspec.yml
    - taskdef.json
  discard-paths: no
  name: ivylevel-backend-$BUILD_ID

cache:
  paths:
    - '/root/.docker/**/*'
